<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use Illuminate\Support\Facades\Http;
use Illuminate\Routing\Redirector;
use App\Models\ZohoToken;
use App\Http\Controllers\DashboardController;


class TicketController extends Controller
{

    public function FetchAllTickets($accessToken){

      $response = Http::withHeaders([
        'orgId' => '20078274006',
        'Authorization' => 'Zoho-oauthtoken '. $accessToken
      ])->get('https://desk.zoho.eu/api/v1/tickets',['include' => 'contacts,assignee,departments,team,isRead']);

      $fetchedTickets = json_decode($response,true);

      if(isset($fetchedTickets['data'])){
        $tickets = $fetchedTickets['data'];
      }else{
        $tickets = null;
      }

      return $tickets;
    }

    public function FetchTicketById($accessToken,$id){

      $response = Http::withHeaders([
        'orgId' => '20078274006',
        'Authorization' => 'Zoho-oauthtoken '. $accessToken
      ])->get('https://desk.zoho.eu/api/v1/tickets/' . $id,['include' => 'contacts,assignee,departments,team,isRead']);

      $fetchedTicket = json_decode($response,true);

      if(isset($fetchedTicket)){
        $ticket = $fetchedTicket;
      }else{
        $ticket = null;
      }
      return $ticket;
    }

    public function FetchThreads($accessToken,$id){

      // get all threads as conversations
      $response = Http::withHeaders([
        'orgId' => '20078274006',
        'Authorization' => 'Zoho-oauthtoken '. $accessToken
      ])->get('https://desk.zoho.eu/api/v1/tickets/' . $id . '/conversations');

      $fetchedThreads = json_decode($response,true);

      if(isset($fetchedThreads['data'])){
        $threads = $fetchedThreads['data'];
      }else{
        $threads = null;
      }

      // get plainText from each conversation
      if($threads != null){
        $AllThreads = array();

        foreach ($threads as $item) {
          $response = Http::withHeaders([
            'orgId' => '20078274006',
            'Authorization' => 'Zoho-oauthtoken '. $accessToken
          ])->get('https://desk.zoho.eu/api/v1/tickets/' . $id . '/threads/' .$item['id']. '?include=plainText');

          $fetchedThreads = json_decode($response,true);

          if(isset($fetchedThreads)){
            $AllThreads[] = $fetchedThreads;
          }
        }
        //dd($AllThreads);
      }

      return $AllThreads;
    }

    public function SendThread(Request $request){

      $dashbaordController = new DashboardController;
      $currentAccessToken = $dashbaordController->CheckIfTokenIsExpired();


      $data = [
        'name'   => $request->name,
        'email'  => $request->email,
        'thread' => $request->thread,
        'status' => $request->status,
        'id'     => $request->id
      ];

      if(!empty($data['thread'])){
        $this->CurlSendThread($data,$currentAccessToken);
      }

      $this->CurlUpdateStatus($data,$currentAccessToken);

      return redirect()->route('ticket.show',$data['id']);

    }

    public function Show($id){

      $dashbaordController = new DashboardController;
      $currentAccessToken = $dashbaordController->CheckIfTokenIsExpired();

      $data = (object) [
        'tickets' => $this->FetchTicketById($currentAccessToken,$id),
        'threads' => $this->FetchThreads($currentAccessToken,$id)
      ];
      //dd($data);
      //dd($data);
      return view('tickets.show')->with('data',$data);
    }


    public function CurlSendThread($data,$currentAccessToken){
      $text = str_replace("\r\n", "\\n", $data['thread']);
      $ch = curl_init();

      curl_setopt($ch, CURLOPT_URL, 'https://desk.zoho.eu/api/v1/tickets/' . $data['id'] .'/sendReply');
      curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
      curl_setopt($ch, CURLOPT_POST, 1);
      curl_setopt($ch, CURLOPT_POSTFIELDS, "{  \"ticketStatus\" : \"Afgrond\",  \"channel\" : \"EMAIL\",  \"attachmentIds\" : [ \"1312123141313\" ],  \"to\" : \"info@unique-hosting.nl\",  \"fromEmailAddress\" : \"client@unique-hosting.nl\",  \"contentType\" : \"plainText\",  \"content\" : \"". $text ." \\n \\n Afzender : ".$data['name']." \\n Email : ".$data['email']." \",  \"isForward\" : \"true\"}");

      $headers = array();
      $headers[] = 'orgId: 20078274006';
      $headers[] = 'Authorization: Zoho-oauthtoken '. $currentAccessToken;
      $headers[] = 'Content-Type: application/x-www-form-urlencoded';
      curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

      $result = curl_exec($ch);
      curl_close($ch);
      return $result;

    }

    public function CurlUpdateStatus($data,$currentAccessToken){
      // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
      $ch = curl_init();

      curl_setopt($ch, CURLOPT_URL, 'https://desk.zoho.eu/api/v1/tickets/'. $data['id']);
      curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
      curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'PATCH');

      curl_setopt($ch, CURLOPT_POSTFIELDS, "{ \"status\" : \"".$data['status']."\"}");

      $headers = array();
      $headers[] = 'orgId: 20078274006';
      $headers[] = 'Authorization: Zoho-oauthtoken '. $currentAccessToken;
      $headers[] = 'Content-Type: application/x-www-form-urlencoded';
      curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

      $result = curl_exec($ch);
      curl_close($ch);
      return $result;
    }

}
